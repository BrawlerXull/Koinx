version: '3.8'

services:
  api-server:
    build:
      context: ./api-server
    container_name: api-server
    environment:
      - NODE_ENV=production
      - NATS_URL=nats://nats:4222
      - MONGO_URI=mongodb://mongo:27017/cryptodb
      - METRICS_PORT=9100
    ports:
      - "3000:3000"
      - "9100:9100"
    expose:
      - "9100"
    depends_on:
      - mongo
      - nats
    networks:
      - app-network

  worker-server:
    build:
      context: ./worker-server
    container_name: worker-server
    environment:
      - NODE_ENV=production
      - NATS_URL=nats://nats:4222
    depends_on:
      - nats
    networks:
      - app-network

  nats:
    image: nats:latest
    container_name: nats
    ports:
      - "4222:4222"
    networks:
      - app-network

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api-server
    links:
      - api-server
    networks:
      - app-network
    restart: always



  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - api-server
    networks:
      - app-network


  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000" 
    depends_on:
      - prometheus
    networks:
      - app-network
    volumes:
      - grafana-data:/var/lib/grafana
    restart: always


volumes:
  mongo-data:
  grafana-data:

networks:
  app-network:
    driver: bridge
